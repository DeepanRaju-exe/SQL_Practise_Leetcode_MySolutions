# Write your MySQL query statement below

WITH R AS (
    SELECT  DISTINCT requester_id AS ID,
    COUNT(requester_id) OVER(PARTITION BY requester_id RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) AS count FROM RequestAccepted 
)
, A AS (
    SELECT DISTINCT accepter_id AS ID,
    COUNT(accepter_id) OVER(PARTITION BY accepter_id RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) AS count FROM RequestAccepted 

)

SELECT ID, MAX(num) AS num   FROM (SELECT ID, SUM(count) OVER (PARTITION BY ID) AS num FROM (SELECT * FROM A UNION ALL  SELECT * FROM R)X)Y GROUP BY ID ORDER BY num DESC    LIMIT 1
;

###### SOME ONE APPROACH INTERESTING BUT SLOW #####
/*
select 
    requester_id as id,
    (   select count(t.requester_id) 
        from RequestAccepted t
        where t.requester_id = id or t.accepter_id = id
    ) as num
from RequestAccepted
group by id
order by num desc
limit 1;
*/
